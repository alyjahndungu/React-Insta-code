[{"/home/turnstone/workspace/insta-driver/src/reportWebVitals.js":"1","/home/turnstone/workspace/insta-driver/src/App.js":"2","/home/turnstone/workspace/insta-driver/src/components/Homepage.js":"3","/home/turnstone/workspace/insta-driver/src/components/InboxView.js":"4","/home/turnstone/workspace/insta-driver/src/components/Chats.js":"5","/home/turnstone/workspace/insta-driver/src/index.js":"6"},{"size":362,"mtime":1606642970240,"results":"7","hashOfConfig":"8"},{"size":182,"mtime":1606644452760,"results":"9","hashOfConfig":"8"},{"size":4973,"mtime":1606646584406,"results":"10","hashOfConfig":"8"},{"size":5921,"mtime":1606656321685,"results":"11","hashOfConfig":"8"},{"size":3821,"mtime":1606651637598,"results":"12","hashOfConfig":"8"},{"size":646,"mtime":1606654869007,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ycdv1v",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/turnstone/workspace/insta-driver/src/reportWebVitals.js",[],["30","31"],"/home/turnstone/workspace/insta-driver/src/App.js",[],["32","33"],"/home/turnstone/workspace/insta-driver/src/components/Homepage.js",["34","35"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport InboxView from './InboxView';\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#ab47bc',\n    color: '#fff',\n     \n    \n\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\n const Homepage = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Persistent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Employer Profile', 'Onboard your vehicles', 'Search & Hire drivers', 'Inbox'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['Recruitment', 'My Organizations', 'Rate a driver', 'My subcription'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <InboxView />\n       \n        </main>\n\n\n    </div>\n  );\n}\n\nexport default Homepage;","/home/turnstone/workspace/insta-driver/src/components/InboxView.js",[],"/home/turnstone/workspace/insta-driver/src/components/Chats.js",["36","37","38","39","40","41","42","43"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst messages = [\n  {\n    id: 1,\n    name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n  {\n    id: 2,\n      name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n  {\n    id: 3,\n   name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n  {\n    id: 4,\n   name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n  {\n    id: 5,\n      name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n  {\n    id: 6,\n    name: 'Shirly Cook',\n    twitter: \"@JohntheD\",\n    person: '/static/images/u1.jpeg',\n    text: 'Vacancy ads helps you attract potential hires who are...',\n    title: 'Inquiry about reloca...'\n  },\n \n];\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n    \n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  listCard: {\n      backgroundColor: '#fafafa',\n      marginLeft: 20,\n      marginRight: 20,\n      borderRadius: 12\n  }\n}));\n\nconst Chats = () =>  {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n       \n        <List className={classes.list}>\n          {messages.map(({ id, name, twitter, person, title, text }) => (\n<Box my={3}>\n\n            <Card  className={classes.listCard} key={id}>\n        <CardContent>\n\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\" src={person} />\n                <ListItemText primary={name} secondary={twitter} />\n                </ListItemAvatar>\n                <Box p={4}>\n                <ListItemText primary={title} secondary={text} />\n                </Box>\n              </ListItem>\n       </CardContent>\n\n            </Card>\n        </Box>\n\n          ))}\n        </List>\n\n      </Paper>\n    </React.Fragment>\n  );\n}\n\nexport default Chats;\n","/home/turnstone/workspace/insta-driver/src/index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":20,"column":8,"nodeType":"52","messageId":"53","endLine":20,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":21,"column":8,"nodeType":"52","messageId":"53","endLine":21,"endColumn":19},{"ruleId":"50","severity":1,"message":"55","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":14},{"ruleId":"50","severity":1,"message":"56","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":15},{"ruleId":"50","severity":1,"message":"57","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":18},{"ruleId":"50","severity":1,"message":"58","line":13,"column":8,"nodeType":"52","messageId":"53","endLine":13,"endColumn":21},{"ruleId":"50","severity":1,"message":"59","line":18,"column":8,"nodeType":"52","messageId":"53","endLine":18,"endColumn":16},{"ruleId":"50","severity":1,"message":"60","line":19,"column":8,"nodeType":"52","messageId":"53","endLine":19,"endColumn":15},{"ruleId":"50","severity":1,"message":"61","line":20,"column":8,"nodeType":"52","messageId":"53","endLine":20,"endColumn":18},{"ruleId":"50","severity":1,"message":"62","line":21,"column":8,"nodeType":"52","messageId":"53","endLine":21,"endColumn":16},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'ListSubheader' is defined but never used.","'MenuIcon' is defined but never used.","'AddIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MoreIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]